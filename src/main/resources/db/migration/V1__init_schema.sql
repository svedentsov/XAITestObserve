-- Таблица для хранения уникальных конфигураций тестовых запусков
CREATE TABLE test_configuration (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    app_version VARCHAR(255) NOT NULL,
    environment VARCHAR(255) NOT NULL,
    test_suite VARCHAR(255),
    unique_name VARCHAR(512) UNIQUE NOT NULL
);

-- Основная таблица для хранения результатов тестовых запусков
CREATE TABLE test_run (
    id VARCHAR(255) PRIMARY KEY,
    test_class VARCHAR(255),
    test_method VARCHAR(255),
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    duration_millis BIGINT NOT NULL,
    timestamp TIMESTAMP,
    status VARCHAR(255),
    exception_type VARCHAR(255),
    exception_message VARCHAR(2000),
    stack_trace VARCHAR(4000),
    -- Поля из AiDecisionMetadata (failedStep)
    step_number INT,
    action VARCHAR(255),
    locator_strategy VARCHAR(255),
    locator_value VARCHAR(512),
    interacted_text VARCHAR(255),
    confidence_score DOUBLE PRECISION,
    result VARCHAR(255),
    error_message VARCHAR(255),
    step_start_time BIGINT,
    step_end_time BIGINT,
    step_duration_millis BIGINT,
    additional_step_data VARCHAR(1000),
    -- Поля из EmbeddableEnvironmentDetails
    env_name VARCHAR(255),
    os_type VARCHAR(255),
    os_version VARCHAR(255),
    browser_type VARCHAR(255),
    browser_version VARCHAR(255),
    screen_resolution VARCHAR(255),
    device_type VARCHAR(255),
    device_name VARCHAR(255),
    driver_version VARCHAR(255),
    app_base_url VARCHAR(255),
    -- Поля из EmbeddableTestArtifacts
    video_url VARCHAR(1024),
    browser_console_log_url VARCHAR(1024),
    har_file_url VARCHAR(1024),
    -- Внешний ключ на конфигурацию
    configuration_id BIGINT NOT NULL,
    CONSTRAINT fk_testrun_configuration FOREIGN KEY (configuration_id) REFERENCES test_configuration(id)
);

-- Таблица для результатов анализа
CREATE TABLE analysis_result (
    id VARCHAR(255) PRIMARY KEY,
    analysis_type VARCHAR(255),
    suggested_reason VARCHAR(2000),
    solution VARCHAR(4000),
    ai_confidence DOUBLE PRECISION,
    analysis_timestamp TIMESTAMP,
    -- Используем нативный JSON тип H2, для PostgreSQL лучше JSONB
    explanation_data JSON,
    user_confirmed_correct BOOLEAN,
    test_run_id VARCHAR(255) NOT NULL,
    CONSTRAINT fk_analysis_testrun FOREIGN KEY (test_run_id) REFERENCES test_run(id) ON DELETE CASCADE
);

-- Таблица для обратной связи по анализу
CREATE TABLE analysis_feedback (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id VARCHAR(255),
    feedback_timestamp TIMESTAMP,
    is_ai_suggestion_correct BOOLEAN,
    user_provided_reason VARCHAR(2000),
    user_provided_solution VARCHAR(2000),
    comments VARCHAR(1000),
    analysis_result_id VARCHAR(255) NOT NULL,
    CONSTRAINT fk_feedback_analysis FOREIGN KEY (analysis_result_id) REFERENCES analysis_result(id) ON DELETE CASCADE
);

-- Вспомогательные таблицы для коллекций
CREATE TABLE execution_path (
    test_run_id VARCHAR(255) NOT NULL,
    step_index INT NOT NULL,
    step_number INT,
    action VARCHAR(255),
    locator_strategy VARCHAR(255),
    locator_value VARCHAR(512),
    interacted_text VARCHAR(255),
    confidence_score DOUBLE PRECISION NOT NULL,
    result VARCHAR(255),
    error_message VARCHAR(255),
    step_start_time BIGINT,
    step_end_time BIGINT,
    step_duration_millis BIGINT,
    additional_step_data VARCHAR(1000),
    PRIMARY KEY (test_run_id, step_index),
    CONSTRAINT fk_path_testrun FOREIGN KEY (test_run_id) REFERENCES test_run(id) ON DELETE CASCADE
);

CREATE TABLE test_run_tags (
    test_run_id VARCHAR(255) NOT NULL,
    tag_name VARCHAR(255),
    CONSTRAINT fk_tags_testrun FOREIGN KEY (test_run_id) REFERENCES test_run(id) ON DELETE CASCADE
);

CREATE TABLE test_run_custom_metadata (
    test_run_id VARCHAR(255) NOT NULL,
    meta_key VARCHAR(255) NOT NULL,
    meta_value VARCHAR(1000),
    PRIMARY KEY (test_run_id, meta_key),
    CONSTRAINT fk_meta_testrun FOREIGN KEY (test_run_id) REFERENCES test_run(id) ON DELETE CASCADE
);

CREATE TABLE artifact_screenshots (
    test_run_id VARCHAR(255) NOT NULL,
    url VARCHAR(1024),
    CONSTRAINT fk_screenshots_testrun FOREIGN KEY (test_run_id) REFERENCES test_run(id) ON DELETE CASCADE
);

CREATE TABLE artifact_app_logs (
    test_run_id VARCHAR(255) NOT NULL,
    url VARCHAR(1024),
    CONSTRAINT fk_logs_testrun FOREIGN KEY (test_run_id) REFERENCES test_run(id) ON DELETE CASCADE
);
