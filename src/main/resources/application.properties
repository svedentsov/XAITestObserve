# =========================================
# DATABASE CONFIGURATION
# =========================================
# Используем файловую базу H2 для простоты разработки.
# AUTO_SERVER=TRUE позволяет подключаться к той же базе из H2-консоли.
spring.datasource.url=jdbc:h2:file:./data/xaiobserver;AUTO_SERVER=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# =========================================
# JPA & LIQUIBASE CONFIGURATION
# =========================================
# Hibernate должен проверять соответствие схемы, но не изменять ее.
spring.jpa.hibernate.ddl-auto=validate
# Liquibase управляет миграциями схемы БД.
spring.liquibase.enabled=true
# Указываем путь к мастер-файлу changelog-ов Liquibase.
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml
# Для избежания ошибок LazyInitializationException при сериализации JPA-сущностей в API-ответах.
spring.jackson.serialization.fail-on-empty-beans=false

# =========================================
# H2 CONSOLE
# =========================================
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# =========================================
# WEB & CACHE CONFIGURATION
# =========================================
spring.thymeleaf.cache=false
spring.cache.type=simple
spring.mvc.contentnegotiation.favor-path-extension=false

# =========================================
# API & SERVICE CONFIGURATION
# =========================================
springdoc.swagger-ui.path=/swagger-ui.html
# URL для mock XAI сервиса. В production-окружении следует заменить на адрес реального Python сервиса.
xai.analysis.service.url=http://localhost:8080/mock/xai/predict
